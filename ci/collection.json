{
	"info": {
		"_postman_id": "0866d7a6-34f0-411f-b4ff-64253a407f5d",
		"name": "birdolAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17199652"
	},
	"item": [
		{
			"name": "UserAuth",
			"item": [
				{
					"name": "Device-A",
					"item": [
						{
							"name": "CreateAccount",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const creation_response = pm.response.json()\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(creation_response).to.have.property('result');\r",
											"    pm.expect(creation_response.result).to.be.eql('ok')\r",
											"    pm.expect(creation_response).to.have.property('access_token');\r",
											"    pm.expect(creation_response.access_token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('account_id');\r",
											"    pm.expect(creation_response.account_id).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('refresh_token');\r",
											"    pm.expect(creation_response.refresh_token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('user_id');\r",
											"    pm.expect(creation_response.user_id).to.be.a(\"number\");\r",
											"});\r",
											"pm.environment.set(\"TOKEN_A\", creation_response.access_token);\r",
											"pm.environment.set(\"ACC_ID\", creation_response.account_id);\r",
											"pm.environment.set(\"REF_TOKEN_A\", creation_response.refresh_token);\r",
											"pm.environment.set(\"USER_ID\", creation_response.user_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"キリト\",\r\n    \"public_key\": \"{{PUBLIC_KEY_A}}\",\r\n    \"key_type\": \"ecdsa\",\r\n    \"device_id\": \"{{DEVICE_ID_A}}\",\r\n    \"completed_progresses\": [{\"id\":0,\"MainCharacterId\":0,\"Name\":\"スズメ\",\"Visual\":2.0,\"Vocal\":2.0,\"Dance\":2.0,\"BestSkill\":\"\",\"ActiveSkillLevel\":1,\"ActiveSkillType\":\"\",\"ActiveSkillScore\":0.0,\"MainStoryId\":0,\"SupportCharacterId\":0,\"PassiveSkillLevel\":1,\"PassiveSkillType\":\"\",\"PassiveSkillScore\":0.0},{\"id\":0,\"MainCharacterId\":1,\"Name\":\"ハシボソガラス\",\"Visual\":1.0,\"Vocal\":1.0,\"Dance\":2.0,\"BestSkill\":\"\",\"ActiveSkillLevel\":1,\"ActiveSkillType\":\"\",\"ActiveSkillScore\":0.0,\"MainStoryId\":0,\"SupportCharacterId\":1,\"PassiveSkillLevel\":1,\"PassiveSkillType\":\"\",\"PassiveSkillScore\":0.0},{\"id\":0,\"MainCharacterId\":2,\"Name\":\"ムクドリ\",\"Visual\":2.0,\"Vocal\":1.0,\"Dance\":1.0,\"BestSkill\":\"\",\"ActiveSkillLevel\":1,\"ActiveSkillType\":\"\",\"ActiveSkillScore\":0.0,\"MainStoryId\":0,\"SupportCharacterId\":2,\"PassiveSkillLevel\":1,\"PassiveSkillType\":\"\",\"PassiveSkillScore\":0.0},{\"id\":0,\"MainCharacterId\":3,\"Name\":\"キジバト\",\"Visual\":1.0,\"Vocal\":2.0,\"Dance\":1.0,\"BestSkill\":\"\",\"ActiveSkillLevel\":1,\"ActiveSkillType\":\"\",\"ActiveSkillScore\":0.0,\"MainStoryId\":0,\"SupportCharacterId\":3,\"PassiveSkillLevel\":1,\"PassiveSkillType\":\"\",\"PassiveSkillScore\":0.0}]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v2/user",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "LoginWithToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const login_response = pm.response.json();\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(login_response).to.have.property('result');\r",
											"    pm.expect(login_response.result).to.be.eql(\"ok\");\r",
											"    pm.expect(login_response).to.have.property(\"session_id\");\r",
											"    pm.expect(login_response.session_id).to.be.a(\"string\");\r",
											"});\r",
											"pm.environment.set(\"SESSION_A\", login_response.session_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN_A}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Birdol-Signature",
										"value": "{{SIGNATURE}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-TimeStamp",
										"value": "{{TIMESTAMP}}",
										"type": "text"
									},
									{
										"key": "DeviceID",
										"value": "{{DEVICE_ID_A}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-Signature-Algo",
										"value": "{{SIGN_ALGO}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/v2/auth",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "SetDataLink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const link_response = pm.response.json();\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(link_response).to.have.property('result');\r",
											"    pm.expect(link_response.result).to.eql('ok');\r",
											"    pm.expect(link_response).to.have.property('expire_date');\r",
											"    pm.expect(link_response.expire_date).is.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN_A}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Birdol-Signature",
										"value": "{{SIGNATURE}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-TimeStamp",
										"value": "{{TIMESTAMP}}",
										"type": "text"
									},
									{
										"key": "DeviceID",
										"value": "{{DEVICE_ID_A}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-Signature-Algo",
										"value": "{{SIGN_ALGO}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"{{LINK_PASSWORD}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v2/auth",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "RefreshToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const creation_response = pm.response.json()\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(creation_response).to.have.property('result');\r",
											"    pm.expect(creation_response.result).to.be.eql('refreshed')\r",
											"    pm.expect(creation_response).to.have.property('token');\r",
											"    pm.expect(creation_response.token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('refresh_token');\r",
											"    pm.expect(creation_response.refresh_token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('session_id');\r",
											"    pm.expect(creation_response.session_id).to.be.a(\"string\");\r",
											"});\r",
											"pm.environment.set(\"TOKEN_A\", creation_response.token);\r",
											"pm.environment.set(\"REF_TOKEN_A\", creation_response.refresh_token);\r",
											"pm.environment.set(\"SESSION_A\", creation_response.session_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN_A}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Birdol-Signature",
										"value": "{{SIGNATURE}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-TimeStamp",
										"value": "{{TIMESTAMP}}",
										"type": "text"
									},
									{
										"key": "DeviceID",
										"value": "{{DEVICE_ID_A}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-Signature-Algo",
										"value": "{{SIGN_ALGO}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/v2/refresh?refresh_token={{REF_TOKEN_A}}",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"refresh"
									],
									"query": [
										{
											"key": "refresh_token",
											"value": "{{REF_TOKEN_A}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Device-B",
					"item": [
						{
							"name": "AccountLink",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const creation_response = pm.response.json()\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(creation_response).to.have.property('result');\r",
											"    pm.expect(creation_response.result).to.be.eql('ok')\r",
											"    pm.expect(creation_response).to.have.property('access_token');\r",
											"    pm.expect(creation_response.access_token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('refresh_token');\r",
											"    pm.expect(creation_response.refresh_token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('user_id');\r",
											"    pm.expect(creation_response.user_id).to.be.a(\"number\");\r",
											"});\r",
											"pm.environment.set(\"TOKEN_B\", creation_response.access_token);\r",
											"pm.environment.set(\"REF_TOKEN_B\", creation_response.refresh_token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"account_id\": \"{{ACC_ID}}\",\r\n    \"password\": \"{{LINK_PASSWORD}}\",\r\n    \"device_id\": \"{{DEVICE_ID_B}}\",\r\n    \"public_key\": \"{{PUBLIC_KEY_B}}\",\r\n    \"key_type\": \"ecdsa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v2/user",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "LoginWithTokenB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const login_response = pm.response.json();\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(login_response).to.have.property('result');\r",
											"    pm.expect(login_response.result).to.be.eql(\"ok\");\r",
											"    pm.expect(login_response).to.have.property(\"session_id\");\r",
											"    pm.expect(login_response.session_id).to.be.a(\"string\");\r",
											"});\r",
											"pm.environment.set(\"SESSION_B\", login_response.session_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN_B}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Birdol-Signature",
										"value": "{{SIGNATURE}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-TimeStamp",
										"value": "{{TIMESTAMP}}",
										"type": "text"
									},
									{
										"key": "DeviceID",
										"value": "{{DEVICE_ID_B}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-Signature-Algo",
										"value": "{{SIGN_ALGO}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/v2/auth",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "SetDataLinkB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const link_response = pm.response.json();\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(link_response).to.have.property('result');\r",
											"    pm.expect(link_response.result).to.eql('ok');\r",
											"    pm.expect(link_response).to.have.property('expire_date');\r",
											"    pm.expect(link_response.expire_date).is.a('string');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN_B}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "X-Birdol-Signature",
										"value": "{{SIGNATURE}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-TimeStamp",
										"value": "{{TIMESTAMP}}",
										"type": "text"
									},
									{
										"key": "DeviceID",
										"value": "{{DEVICE_ID_B}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-Signature-Algo",
										"value": "{{SIGN_ALGO}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"{{LINK_PASSWORD}}\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/v2/auth",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "RefreshTokenB",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const creation_response = pm.response.json()\r",
											"pm.test(\"Status Check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Parameter Check\", () => {\r",
											"    pm.expect(creation_response).to.have.property('result');\r",
											"    pm.expect(creation_response.result).to.be.eql('refreshed')\r",
											"    pm.expect(creation_response).to.have.property('token');\r",
											"    pm.expect(creation_response.token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('refresh_token');\r",
											"    pm.expect(creation_response.refresh_token).to.be.a(\"string\");\r",
											"    pm.expect(creation_response).to.have.property('session_id');\r",
											"    pm.expect(creation_response.session_id).to.be.a(\"string\");\r",
											"});\r",
											"pm.environment.set(\"TOKEN_B\", creation_response.token);\r",
											"pm.environment.set(\"REF_TOKEN_B\", creation_response.refresh_token);\r",
											"pm.environment.set(\"SESSION_B\", creation_response.session_id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN_B}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Birdol-Signature",
										"value": "{{SIGNATURE}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-TimeStamp",
										"value": "{{TIMESTAMP}}",
										"type": "text"
									},
									{
										"key": "DeviceID",
										"value": "{{DEVICE_ID_B}}",
										"type": "text"
									},
									{
										"key": "X-Birdol-Signature-Algo",
										"value": "{{SIGN_ALGO}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/v2/refresh?refresh_token={{REF_TOKEN_B}}",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v2",
										"refresh"
									],
									"query": [
										{
											"key": "refresh_token",
											"value": "{{REF_TOKEN_B}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}